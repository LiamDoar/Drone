
Project_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00000852  000008c6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000852  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stab         00002ec8  00000000  00000000  000008c8  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000cff  00000000  00000000  00003790  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      0000002f  00000000  00000000  0000448f  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000230  00000000  00000000  000044be  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000014fd  00000000  00000000  000046ee  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000092e  00000000  00000000  00005beb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000bfc  00000000  00000000  00006519  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003f0  00000000  00000000  00007118  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a62  00000000  00000000  00007508  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b8a  00000000  00000000  00007f6a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000198  00000000  00000000  00008af4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
	
	return (atof(pBuff));
}

float NMEA_getLatitude (char NMEA_Text[])
{
   0:	0c 94 4b 00 	jmp	0x96	; 0x96 <__ctors_end>
   4:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
   8:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
   c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  10:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  14:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  18:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  1c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  20:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  24:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  28:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  2c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
	//4807.038,N
	uint8_t count = 0;
  30:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
	float minutes = 0.0;
	float latatude = 0.0;
	char pBuff[10];
	while (!(count == GPGGA_LAT_POISTION))
	{
		if (NMEA_Text[n] == ',')
  34:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  38:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  3c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
		{
			count++;
		}
		
		n++;
  40:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
	uint8_t i = 0;
	uint8_t degress = 0;
	float minutes = 0.0;
	float latatude = 0.0;
	char pBuff[10];
	while (!(count == GPGGA_LAT_POISTION))
  44:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
		n++;
	}
	
	while (!(i==2))
	{
		pBuff[i] = NMEA_Text[n+i];
  48:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  4c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  50:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  54:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
		i=i++;
	}
	pBuff[i] = '\0';
	degress = atoi(pBuff);
  58:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  5c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  60:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
	
	while (!(NMEA_Text[(n+i)]==','))
  64:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
  68:	08 4a       	sbci	r16, 0xA8	; 168
  6a:	d7 3b       	cpi	r29, 0xB7	; 183
  6c:	3b ce       	rjmp	.-906    	; 0xfffffce4 <__eeprom_end+0xff7efce4>
  6e:	01 6e       	ori	r16, 0xE1	; 225
  70:	84 bc       	out	0x24, r8	; 36
  72:	bf fd       	.word	0xfdbf	; ????
  74:	c1 2f       	mov	r28, r17
  76:	3d 6c       	ori	r19, 0xCD	; 205
  78:	74 31       	cpi	r23, 0x14	; 20
	}
	
	while (!(i==2))
	{
		pBuff[i] = NMEA_Text[n+i];
		i=i++;
  7a:	9a bd       	out	0x2a, r25	; 42
	pBuff[i] = '\0';
	degress = atoi(pBuff);
	
	while (!(NMEA_Text[(n+i)]==','))
	{
		pBuff[i-2] = NMEA_Text[n+i];
  7c:	56 83       	std	Z+6, r21	; 0x06
  7e:	3d da       	rcall	.-2950   	; 0xfffff4fa <__eeprom_end+0xff7ef4fa>
  80:	3d 00       	.word	0x003d	; ????
  82:	c7 7f       	andi	r28, 0xF7	; 247
  84:	11 be       	out	0x31, r1	; 49
  86:	d9 e4       	ldi	r29, 0x49	; 73
  88:	bb 4c       	sbci	r27, 0xCB	; 203
		i=i++;
  8a:	3e 91       	ld	r19, -X
		i=i++;
	}
	pBuff[i] = '\0';
	degress = atoi(pBuff);
	
	while (!(NMEA_Text[(n+i)]==','))
  8c:	6b aa       	std	Y+51, r6	; 0x33
  8e:	aa be       	out	0x3a, r10	; 58
  90:	00 00       	nop
  92:	00 80       	ld	r0, Z
  94:	3f 00       	.word	0x003f	; ????

00000096 <__ctors_end>:
  96:	11 24       	eor	r1, r1
  98:	1f be       	out	0x3f, r1	; 63
  9a:	cf ef       	ldi	r28, 0xFF	; 255
  9c:	d8 e0       	ldi	r29, 0x08	; 8
  9e:	de bf       	out	0x3e, r29	; 62
  a0:	cd bf       	out	0x3d, r28	; 61

000000a2 <__do_copy_data>:
  a2:	11 e0       	ldi	r17, 0x01	; 1
  a4:	a0 e0       	ldi	r26, 0x00	; 0
  a6:	b1 e0       	ldi	r27, 0x01	; 1
	{
		pBuff[i-2] = NMEA_Text[n+i];
		i=i++;
	}
	pBuff[i-2] = '\0';
  a8:	e2 e5       	ldi	r30, 0x52	; 82
  aa:	f8 e0       	ldi	r31, 0x08	; 8
  ac:	02 c0       	rjmp	.+4      	; 0xb2 <__do_copy_data+0x10>
  ae:	05 90       	lpm	r0, Z+
  b0:	0d 92       	st	X+, r0
  b2:	a0 30       	cpi	r26, 0x00	; 0
  b4:	b1 07       	cpc	r27, r17
	minutes = atof(pBuff);
  b6:	d9 f7       	brne	.-10     	; 0xae <__do_copy_data+0xc>

000000b8 <__do_clear_bss>:
  b8:	21 e0       	ldi	r18, 0x01	; 1
  ba:	a0 e0       	ldi	r26, 0x00	; 0
  bc:	b1 e0       	ldi	r27, 0x01	; 1
  be:	01 c0       	rjmp	.+2      	; 0xc2 <.do_clear_bss_start>

000000c0 <.do_clear_bss_loop>:
  c0:	1d 92       	st	X+, r1

000000c2 <.do_clear_bss_start>:
	
	latatude = (degress + (minutes/60));
  c2:	a0 30       	cpi	r26, 0x00	; 0
  c4:	b2 07       	cpc	r27, r18
  c6:	e1 f7       	brne	.-8      	; 0xc0 <.do_clear_bss_loop>
  c8:	0e 94 69 01 	call	0x2d2	; 0x2d2 <main>
  cc:	0c 94 27 04 	jmp	0x84e	; 0x84e <_exit>

000000d0 <__bad_interrupt>:
  d0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000d4 <_Z22NAVIGATION_getDistancehh>:
  d4:	81 e0       	ldi	r24, 0x01	; 1
  d6:	08 95       	ret

000000d8 <_Z28NAVIGATION_getCurrentHeadingv>:
  d8:	0e 94 bf 00 	call	0x17e	; 0x17e <_Z26SENSOR_HMC5883L_getHeadingv>
  dc:	0e 94 db 02 	call	0x5b6	; 0x5b6 <__fixunssfsi>
  e0:	86 2f       	mov	r24, r22
  e2:	08 95       	ret

000000e4 <_Z23NAVIGATION_getDirectionhh>:
  e4:	81 e0       	ldi	r24, 0x01	; 1
  e6:	08 95       	ret

000000e8 <_Z23NAVIGATION_nextWaypointh>:
  e8:	84 31       	cpi	r24, 0x14	; 20
  ea:	51 f0       	breq	.+20     	; 0x100 <_Z23NAVIGATION_nextWaypointh+0x18>
  ec:	18 f4       	brcc	.+6      	; 0xf4 <_Z23NAVIGATION_nextWaypointh+0xc>
  ee:	8a 30       	cpi	r24, 0x0A	; 10
  f0:	29 f4       	brne	.+10     	; 0xfc <_Z23NAVIGATION_nextWaypointh+0x14>
  f2:	0c c0       	rjmp	.+24     	; 0x10c <_Z23NAVIGATION_nextWaypointh+0x24>
  f4:	8e 31       	cpi	r24, 0x1E	; 30
  f6:	31 f0       	breq	.+12     	; 0x104 <_Z23NAVIGATION_nextWaypointh+0x1c>
  f8:	88 32       	cpi	r24, 0x28	; 40
	
	if (NMEA_Text[n+i+1] = 'S')
  fa:	31 f0       	breq	.+12     	; 0x108 <_Z23NAVIGATION_nextWaypointh+0x20>
  fc:	80 e0       	ldi	r24, 0x00	; 0
  fe:	08 95       	ret
 100:	8e e1       	ldi	r24, 0x1E	; 30
 102:	08 95       	ret
	{
		latatude = latatude * -1;
 104:	88 e2       	ldi	r24, 0x28	; 40
	}
	
	return latatude;
}
 106:	08 95       	ret
 108:	82 e3       	ldi	r24, 0x32	; 50
 10a:	08 95       	ret
 10c:	84 e1       	ldi	r24, 0x14	; 20
 10e:	08 95       	ret

00000110 <_Z22NAVIGATION_getSteeringhh>:
 110:	81 e0       	ldi	r24, 0x01	; 1
 112:	08 95       	ret

00000114 <_Z19NAVIGATION_getSpeedh>:
 114:	81 e0       	ldi	r24, 0x01	; 1
 116:	08 95       	ret

00000118 <_Z22NAVIGATION_setSteeringh>:
 118:	08 95       	ret

0000011a <_Z19NAVIGATION_setSpeedh>:
 11a:	08 95       	ret

0000011c <_Z20SENSOR_HMC5883L_initv>:
 11c:	0e 94 3f 01 	call	0x27e	; 0x27e <_Z9TWI_startv>
 120:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_Z12TWI_completev>
 124:	80 e0       	ldi	r24, 0x00	; 0
 126:	0e 94 47 01 	call	0x28e	; 0x28e <_Z9TWI_writeh>
 12a:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_Z12TWI_completev>
 12e:	80 e7       	ldi	r24, 0x70	; 112
 130:	0e 94 47 01 	call	0x28e	; 0x28e <_Z9TWI_writeh>
 134:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_Z12TWI_completev>
 138:	0e 94 43 01 	call	0x286	; 0x286 <_Z8TWI_stopv>
 13c:	0e 94 3f 01 	call	0x27e	; 0x27e <_Z9TWI_startv>
	TWI_write(0x70);// write 0x70 to CRA
	TWI_complete();
	TWI_stop();
	
	TWI_start();
	TWI_complete();
 140:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_Z12TWI_completev>
	TWI_write(0x01);// set pointer to CRB
 144:	81 e0       	ldi	r24, 0x01	; 1
 146:	0e 94 47 01 	call	0x28e	; 0x28e <_Z9TWI_writeh>
	TWI_complete();
 14a:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_Z12TWI_completev>
	TWI_write(0xA0);// write 0xA0 to CRB
 14e:	80 ea       	ldi	r24, 0xA0	; 160
 150:	0e 94 47 01 	call	0x28e	; 0x28e <_Z9TWI_writeh>
	TWI_complete();
 154:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_Z12TWI_completev>
	TWI_stop();
 158:	0e 94 43 01 	call	0x286	; 0x286 <_Z8TWI_stopv>

	TWI_start();
 15c:	0e 94 3f 01 	call	0x27e	; 0x27e <_Z9TWI_startv>
	TWI_complete();
 160:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_Z12TWI_completev>
	TWI_write(0x02);// set pointer to ??
 164:	82 e0       	ldi	r24, 0x02	; 2
 166:	0e 94 47 01 	call	0x28e	; 0x28e <_Z9TWI_writeh>
	TWI_complete();
 16a:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_Z12TWI_completev>
	TWI_write(0x00);// write 0x00 to allow continues monitoring
 16e:	80 e0       	ldi	r24, 0x00	; 0
 170:	0e 94 47 01 	call	0x28e	; 0x28e <_Z9TWI_writeh>
	TWI_complete();
 174:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_Z12TWI_completev>
	TWI_stop();
 178:	0e 94 43 01 	call	0x286	; 0x286 <_Z8TWI_stopv>
 17c:	08 95       	ret

0000017e <_Z26SENSOR_HMC5883L_getHeadingv>:
}

float SENSOR_HMC5883L_getHeading(void)
{
 17e:	cf 92       	push	r12
 180:	df 92       	push	r13
 182:	ef 92       	push	r14
 184:	ff 92       	push	r15
 186:	cf 93       	push	r28
	int16_t raw_y = 0;
	int16_t raw_z = 0;
	float headingDegrees = 0;
	
	//set the pointer to the x axis
	TWI_start();
 188:	0e 94 3f 01 	call	0x27e	; 0x27e <_Z9TWI_startv>
	TWI_complete();
 18c:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_Z12TWI_completev>
	TWI_write(HMC5883L_WRITE_ADDRESS);
 190:	8c e3       	ldi	r24, 0x3C	; 60
 192:	0e 94 47 01 	call	0x28e	; 0x28e <_Z9TWI_writeh>
	TWI_complete();
 196:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_Z12TWI_completev>
	TWI_write(0x03); 
 19a:	83 e0       	ldi	r24, 0x03	; 3
 19c:	0e 94 47 01 	call	0x28e	; 0x28e <_Z9TWI_writeh>
	TWI_complete();
 1a0:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_Z12TWI_completev>
	TWI_stop();
 1a4:	0e 94 43 01 	call	0x286	; 0x286 <_Z8TWI_stopv>
	
	//read data from x, y and z axis
	TWI_start();
 1a8:	0e 94 3f 01 	call	0x27e	; 0x27e <_Z9TWI_startv>
	TWI_complete();
 1ac:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_Z12TWI_completev>
	TWI_write(HMC5883L_READ_ADDRESS);
 1b0:	8d e3       	ldi	r24, 0x3D	; 61
 1b2:	0e 94 47 01 	call	0x28e	; 0x28e <_Z9TWI_writeh>
	TWI_complete();
 1b6:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_Z12TWI_completev>
	raw_x = TWI_readACK(); 
 1ba:	0e 94 4d 01 	call	0x29a	; 0x29a <_Z11TWI_readACKv>
 1be:	f8 2e       	mov	r15, r24
	TWI_complete();
 1c0:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_Z12TWI_completev>
	raw_z = TWI_readACK();
 1c4:	0e 94 4d 01 	call	0x29a	; 0x29a <_Z11TWI_readACKv>
	TWI_complete();
 1c8:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_Z12TWI_completev>
	raw_y = TWI_readACK();
 1cc:	0e 94 4d 01 	call	0x29a	; 0x29a <_Z11TWI_readACKv>
 1d0:	c8 2f       	mov	r28, r24
	TWI_complete();
 1d2:	0e 94 53 01 	call	0x2a6	; 0x2a6 <_Z12TWI_completev>
	TWI_stop();
 1d6:	0e 94 43 01 	call	0x286	; 0x286 <_Z8TWI_stopv>

	// convert the raw data into a heading in degrees
	headingDegrees = atan2((double)raw_y,(double)raw_x)* 180 / 3.14159265 + 180;
 1da:	6f 2d       	mov	r22, r15
 1dc:	70 e0       	ldi	r23, 0x00	; 0
 1de:	80 e0       	ldi	r24, 0x00	; 0
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	0e 94 09 03 	call	0x612	; 0x612 <__floatsisf>
 1e6:	6b 01       	movw	r12, r22
 1e8:	7c 01       	movw	r14, r24
 1ea:	6c 2f       	mov	r22, r28
 1ec:	70 e0       	ldi	r23, 0x00	; 0
 1ee:	80 e0       	ldi	r24, 0x00	; 0
 1f0:	90 e0       	ldi	r25, 0x00	; 0
 1f2:	0e 94 09 03 	call	0x612	; 0x612 <__floatsisf>
 1f6:	a7 01       	movw	r20, r14
 1f8:	96 01       	movw	r18, r12
 1fa:	0e 94 20 02 	call	0x440	; 0x440 <atan2>
 1fe:	20 e0       	ldi	r18, 0x00	; 0
 200:	30 e0       	ldi	r19, 0x00	; 0
 202:	44 e3       	ldi	r20, 0x34	; 52
 204:	53 e4       	ldi	r21, 0x43	; 67
 206:	0e 94 c1 03 	call	0x782	; 0x782 <__mulsf3>
 20a:	2b ed       	ldi	r18, 0xDB	; 219
 20c:	3f e0       	ldi	r19, 0x0F	; 15
 20e:	49 e4       	ldi	r20, 0x49	; 73
 210:	50 e4       	ldi	r21, 0x40	; 64
 212:	0e 94 73 02 	call	0x4e6	; 0x4e6 <__divsf3>
 216:	20 e0       	ldi	r18, 0x00	; 0
 218:	30 e0       	ldi	r19, 0x00	; 0
 21a:	44 e3       	ldi	r20, 0x34	; 52
 21c:	53 e4       	ldi	r21, 0x43	; 67
 21e:	0e 94 ad 01 	call	0x35a	; 0x35a <__addsf3>
	return headingDegrees;
}
 222:	cf 91       	pop	r28
 224:	ff 90       	pop	r15
 226:	ef 90       	pop	r14
 228:	df 90       	pop	r13
 22a:	cf 90       	pop	r12
 22c:	08 95       	ret

0000022e <_Z18SENSOR_MS5611_initv>:

// Pressure Sensor
void SENSOR_MS5611_init(void)
{
 22e:	08 95       	ret

00000230 <_Z16SENSOR_xxxx_initv>:
	return 1;
}

// 3-Tilt Axis
void SENSOR_xxxx_init(void)
{
 230:	08 95       	ret

00000232 <_Z22SENSOR_GPS_getLocationv>:

int8_t SENSOR_GPS_getLocation(void)
{
	// to complete code
	return 1;
}
 232:	81 e0       	ldi	r24, 0x01	; 1
 234:	08 95       	ret

00000236 <_Z24SENSOR_GPS_locationCheckh>:

uint8_t SENSOR_GPS_locationCheck(uint8_t)
{
	return 1;
 236:	81 e0       	ldi	r24, 0x01	; 1
 238:	08 95       	ret

0000023a <_Z12SETUP_timer0v>:
#include "config.h"


void SETUP_timer0(void) // setup timer 0
{
	TCCR0B |= (1 << CS00); //no pre-scaller
 23a:	85 b5       	in	r24, 0x25	; 37
 23c:	81 60       	ori	r24, 0x01	; 1
 23e:	85 bd       	out	0x25, r24	; 37
	
	TCNT0 = 0;
 240:	16 bc       	out	0x26, r1	; 38
 242:	08 95       	ret

00000244 <_Z14SETUP_pwm_initv>:
}

void SETUP_pwm_init(void) // setup timer 1 for fast PWM
{
	TCCR1A |= (1 << WGM11)|(1 << COM1A1);
 244:	e0 e8       	ldi	r30, 0x80	; 128
 246:	f0 e0       	ldi	r31, 0x00	; 0
 248:	80 81       	ld	r24, Z
 24a:	82 68       	ori	r24, 0x82	; 130
 24c:	80 83       	st	Z, r24
	TCCR1B |= (1 << WGM12)|(1 << WGM13)|(1 << CS10);
 24e:	e1 e8       	ldi	r30, 0x81	; 129
 250:	f0 e0       	ldi	r31, 0x00	; 0
 252:	80 81       	ld	r24, Z
 254:	89 61       	ori	r24, 0x19	; 25
 256:	80 83       	st	Z, r24
	ICR1 = TIMER1_TOP;
 258:	8f e9       	ldi	r24, 0x9F	; 159
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	90 93 87 00 	sts	0x0087, r25
 260:	80 93 86 00 	sts	0x0086, r24
 264:	08 95       	ret

00000266 <_Z15SETUP_port_initv>:
}

void SETUP_port_init(void) // setup port functions (input / output)
{
	//All of port B set as outputs
	DDRB = 0xff; 
 266:	8f ef       	ldi	r24, 0xFF	; 255
 268:	84 b9       	out	0x04, r24	; 4
 26a:	08 95       	ret

0000026c <_Z8TWI_initv>:
#include <avr/io.h>

void TWI_init(void)
{
	//set SCL to 400kHz
	TWSR = 0x00;
 26c:	10 92 b9 00 	sts	0x00B9, r1
	TWBR = 0x0C;
 270:	8c e0       	ldi	r24, 0x0C	; 12
 272:	80 93 b8 00 	sts	0x00B8, r24
	//enable TWI
	TWCR = (1<<TWEN);
 276:	84 e0       	ldi	r24, 0x04	; 4
 278:	80 93 bc 00 	sts	0x00BC, r24
 27c:	08 95       	ret

0000027e <_Z9TWI_startv>:
}

void TWI_start(void)
{
	TWCR = (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);
 27e:	84 ea       	ldi	r24, 0xA4	; 164
 280:	80 93 bc 00 	sts	0x00BC, r24
 284:	08 95       	ret

00000286 <_Z8TWI_stopv>:
}
//send stop signal
void TWI_stop(void)
{
	TWCR = (1<<TWINT)|(1<<TWSTO)|(1<<TWEN);
 286:	84 e9       	ldi	r24, 0x94	; 148
 288:	80 93 bc 00 	sts	0x00BC, r24
 28c:	08 95       	ret

0000028e <_Z9TWI_writeh>:
}

void TWI_write(uint8_t data)
{
	TWDR = data;
 28e:	80 93 bb 00 	sts	0x00BB, r24
	TWCR = (1<<TWINT)|(1<<TWEN);
 292:	84 e8       	ldi	r24, 0x84	; 132
 294:	80 93 bc 00 	sts	0x00BC, r24
 298:	08 95       	ret

0000029a <_Z11TWI_readACKv>:
}
//read byte with ACK
uint8_t TWI_readACK(void)
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWEA);
 29a:	84 ec       	ldi	r24, 0xC4	; 196
 29c:	80 93 bc 00 	sts	0x00BC, r24
	return TWDR;
 2a0:	80 91 bb 00 	lds	r24, 0x00BB
}
 2a4:	08 95       	ret

000002a6 <_Z12TWI_completev>:

void TWI_complete(void)
{
	int i = 0;		//time out variable
	// wait for i2c interface to complete operation
	while ((!(TWCR & (1<<TWINT))) && (i < 90))
 2a6:	8b e5       	ldi	r24, 0x5B	; 91
 2a8:	90 e0       	ldi	r25, 0x00	; 0
 2aa:	ec eb       	ldi	r30, 0xBC	; 188
 2ac:	f0 e0       	ldi	r31, 0x00	; 0
 2ae:	20 81       	ld	r18, Z
 2b0:	22 23       	and	r18, r18
 2b2:	14 f0       	brlt	.+4      	; 0x2b8 <_Z12TWI_completev+0x12>
 2b4:	01 97       	sbiw	r24, 0x01	; 1
 2b6:	d9 f7       	brne	.-10     	; 0x2ae <_Z12TWI_completev+0x8>
 2b8:	08 95       	ret

000002ba <_Z10USART_initv>:


void USART_init(void)
{
	// Set baud rate
	UBRR0H = (unsigned char)(BAUD_PRESCALE>>8);
 2ba:	10 92 c5 00 	sts	0x00C5, r1
	UBRR0L = (unsigned char)BAUD_PRESCALE;
 2be:	87 e6       	ldi	r24, 0x67	; 103
 2c0:	80 93 c4 00 	sts	0x00C4, r24
	// Enable receiver and transmitter
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 2c4:	88 e1       	ldi	r24, 0x18	; 24
 2c6:	80 93 c1 00 	sts	0x00C1, r24
	// Set frame format: 8N1
	UCSR0C = ((1<<UCSZ00)|(1<<UCSZ01));
 2ca:	86 e0       	ldi	r24, 0x06	; 6
 2cc:	80 93 c2 00 	sts	0x00C2, r24
 2d0:	08 95       	ret

000002d2 <main>:
void slow_loop(void);

int main(void) // main function
{
	// setup USART
	USART_init();
 2d2:	0e 94 5d 01 	call	0x2ba	; 0x2ba <_Z10USART_initv>
	// Set Port pins
	SETUP_port_init();
 2d6:	0e 94 33 01 	call	0x266	; 0x266 <_Z15SETUP_port_initv>
	// setup PWM timer1
	SETUP_pwm_init();
 2da:	0e 94 22 01 	call	0x244	; 0x244 <_Z14SETUP_pwm_initv>
	// setup timer0
	SETUP_timer0();
 2de:	0e 94 1d 01 	call	0x23a	; 0x23a <_Z12SETUP_timer0v>
	// setup TWI
	TWI_init();
 2e2:	0e 94 36 01 	call	0x26c	; 0x26c <_Z8TWI_initv>
	// setup compass
	SENSOR_HMC5883L_init();
 2e6:	0e 94 8e 00 	call	0x11c	; 0x11c <_Z20SENSOR_HMC5883L_initv>
	// setup pressure sensor - not needed
	SENSOR_MS5611_init();
 2ea:	0e 94 17 01 	call	0x22e	; 0x22e <_Z18SENSOR_MS5611_initv>
	// setup 3-axis tilt sensor - not needed
	SENSOR_xxxx_init();
 2ee:	0e 94 18 01 	call	0x230	; 0x230 <_Z16SENSOR_xxxx_initv>
	while(1)// endless loop
    {
     	
		counter ++;
		
		current_location = SENSOR_GPS_getLocation();
 2f2:	0e 94 19 01 	call	0x232	; 0x232 <_Z22SENSOR_GPS_getLocationv>
 2f6:	c8 2f       	mov	r28, r24
			
		// do not navigate with corrupt data
		if (!(SENSOR_GPS_locationCheck(current_location)))
 2f8:	0e 94 1b 01 	call	0x236	; 0x236 <_Z24SENSOR_GPS_locationCheckh>
 2fc:	81 11       	cpse	r24, r1
 2fe:	0d c0       	rjmp	.+26     	; 0x31a <main+0x48>
			
		{
			// waypoint distance
			waypoint_distance = NAVIGATION_getDistance(current_location, waypoint);
 300:	60 e0       	ldi	r22, 0x00	; 0
 302:	8c 2f       	mov	r24, r28
 304:	0e 94 6a 00 	call	0xd4	; 0xd4 <_Z22NAVIGATION_getDistancehh>
 308:	d8 2f       	mov	r29, r24
		
			// target_bearing is where we should be heading
			target_heading = NAVIGATION_getDirection(current_location, waypoint);
 30a:	60 e0       	ldi	r22, 0x00	; 0
 30c:	8c 2f       	mov	r24, r28
 30e:	0e 94 72 00 	call	0xe4	; 0xe4 <_Z23NAVIGATION_getDirectionhh>
 312:	c8 2f       	mov	r28, r24
		}
		
		// if within error move to next way point
		if (waypoint_distance<WAYPOINT_ERROR)
 314:	d1 11       	cpse	r29, r1
 316:	05 c0       	rjmp	.+10     	; 0x322 <main+0x50>
 318:	01 c0       	rjmp	.+2      	; 0x31c <main+0x4a>
	
	// error code transmitted - USART_transmit_packet(BASE_ADDRESS, speed);
	uint8_t waypoint = 0;
	uint8_t counter = 0;
	uint8_t current_location = 0;
	uint8_t target_heading = 0;
 31a:	c0 e0       	ldi	r28, 0x00	; 0
		}
		
		// if within error move to next way point
		if (waypoint_distance<WAYPOINT_ERROR)
		{
			waypoint = NAVIGATION_nextWaypoint(waypoint);
 31c:	80 e0       	ldi	r24, 0x00	; 0
 31e:	0e 94 74 00 	call	0xe8	; 0xe8 <_Z23NAVIGATION_nextWaypointh>
		}
				
		// current bearing
		current_heading = NAVIGATION_getCurrentHeading();
 322:	0e 94 6c 00 	call	0xd8	; 0xd8 <_Z28NAVIGATION_getCurrentHeadingv>
		
		//find steering... might be better to break it out into setsteering and getradius for data logging and fault finding
		turning_radius = NAVIGATION_getSteering(target_heading, current_heading);
 326:	68 2f       	mov	r22, r24
 328:	8c 2f       	mov	r24, r28
 32a:	0e 94 88 00 	call	0x110	; 0x110 <_Z22NAVIGATION_getSteeringhh>
 32e:	c8 2f       	mov	r28, r24
		
		//set speed due to way point distance.... not sure if needed.
		//find speed due to turning radius. need to stop on last waypoint
		target_speed = NAVIGATION_getSpeed(turning_radius);
 330:	0e 94 8a 00 	call	0x114	; 0x114 <_Z19NAVIGATION_getSpeedh>
		
		NAVIGATION_setSpeed(target_speed);
 334:	0e 94 8d 00 	call	0x11a	; 0x11a <_Z19NAVIGATION_setSpeedh>
		NAVIGATION_setSteering(turning_radius);
 338:	8c 2f       	mov	r24, r28
 33a:	0e 94 8c 00 	call	0x118	; 0x118 <_Z22NAVIGATION_setSteeringh>
		
		// $GPGGA,230600.501,4543.8895,N,02112.7238,E,1,03,3.3,96.7,M,39.0,M,,0000*6A
		char ReceivedByte;
			for (;;) // Loop forever
			{
				while ((UCSR0A & (1 << RXC0)) == 0) {}; // Do nothing until data have been received and is ready to be read from UDR
 33e:	e0 ec       	ldi	r30, 0xC0	; 192
 340:	f0 e0       	ldi	r31, 0x00	; 0
				ReceivedByte = UDR0; // Fetch the received byte value into the variable "ByteReceived"
 342:	a6 ec       	ldi	r26, 0xC6	; 198
 344:	b0 e0       	ldi	r27, 0x00	; 0
		
		// $GPGGA,230600.501,4543.8895,N,02112.7238,E,1,03,3.3,96.7,M,39.0,M,,0000*6A
		char ReceivedByte;
			for (;;) // Loop forever
			{
				while ((UCSR0A & (1 << RXC0)) == 0) {}; // Do nothing until data have been received and is ready to be read from UDR
 346:	80 81       	ld	r24, Z
 348:	88 23       	and	r24, r24
 34a:	ec f7       	brge	.-6      	; 0x346 <main+0x74>
				ReceivedByte = UDR0; // Fetch the received byte value into the variable "ByteReceived"
 34c:	9c 91       	ld	r25, X

				while ((UCSR0A & (1 << UDRE0)) == 0) {}; // Do nothing until UDR is ready for more data to be written to it
 34e:	80 81       	ld	r24, Z
 350:	85 ff       	sbrs	r24, 5
 352:	fd cf       	rjmp	.-6      	; 0x34e <main+0x7c>
				UDR0 = ReceivedByte; // Echo back the received byte back to the computer
 354:	9c 93       	st	X, r25
		
		
		
		// $GPGGA,230600.501,4543.8895,N,02112.7238,E,1,03,3.3,96.7,M,39.0,M,,0000*6A
		char ReceivedByte;
			for (;;) // Loop forever
 356:	f7 cf       	rjmp	.-18     	; 0x346 <main+0x74>

00000358 <__subsf3>:
 358:	50 58       	subi	r21, 0x80	; 128

0000035a <__addsf3>:
 35a:	bb 27       	eor	r27, r27
 35c:	aa 27       	eor	r26, r26
 35e:	0e d0       	rcall	.+28     	; 0x37c <__addsf3x>
 360:	cf c1       	rjmp	.+926    	; 0x700 <__fp_round>
 362:	c0 d1       	rcall	.+896    	; 0x6e4 <__fp_pscA>
 364:	30 f0       	brcs	.+12     	; 0x372 <__addsf3+0x18>
 366:	c5 d1       	rcall	.+906    	; 0x6f2 <__fp_pscB>
 368:	20 f0       	brcs	.+8      	; 0x372 <__addsf3+0x18>
 36a:	31 f4       	brne	.+12     	; 0x378 <__addsf3+0x1e>
 36c:	9f 3f       	cpi	r25, 0xFF	; 255
 36e:	11 f4       	brne	.+4      	; 0x374 <__addsf3+0x1a>
 370:	1e f4       	brtc	.+6      	; 0x378 <__addsf3+0x1e>
 372:	90 c1       	rjmp	.+800    	; 0x694 <__fp_nan>
 374:	0e f4       	brtc	.+2      	; 0x378 <__addsf3+0x1e>
 376:	e0 95       	com	r30
 378:	e7 fb       	bst	r30, 7
 37a:	86 c1       	rjmp	.+780    	; 0x688 <__fp_inf>

0000037c <__addsf3x>:
 37c:	e9 2f       	mov	r30, r25
 37e:	d1 d1       	rcall	.+930    	; 0x722 <__fp_split3>
 380:	80 f3       	brcs	.-32     	; 0x362 <__addsf3+0x8>
 382:	ba 17       	cp	r27, r26
 384:	62 07       	cpc	r22, r18
 386:	73 07       	cpc	r23, r19
 388:	84 07       	cpc	r24, r20
 38a:	95 07       	cpc	r25, r21
 38c:	18 f0       	brcs	.+6      	; 0x394 <__addsf3x+0x18>
 38e:	71 f4       	brne	.+28     	; 0x3ac <__addsf3x+0x30>
 390:	9e f5       	brtc	.+102    	; 0x3f8 <__addsf3x+0x7c>
 392:	e9 c1       	rjmp	.+978    	; 0x766 <__fp_zero>
 394:	0e f4       	brtc	.+2      	; 0x398 <__addsf3x+0x1c>
 396:	e0 95       	com	r30
 398:	0b 2e       	mov	r0, r27
 39a:	ba 2f       	mov	r27, r26
 39c:	a0 2d       	mov	r26, r0
 39e:	0b 01       	movw	r0, r22
 3a0:	b9 01       	movw	r22, r18
 3a2:	90 01       	movw	r18, r0
 3a4:	0c 01       	movw	r0, r24
 3a6:	ca 01       	movw	r24, r20
 3a8:	a0 01       	movw	r20, r0
 3aa:	11 24       	eor	r1, r1
 3ac:	ff 27       	eor	r31, r31
 3ae:	59 1b       	sub	r21, r25
 3b0:	99 f0       	breq	.+38     	; 0x3d8 <__addsf3x+0x5c>
 3b2:	59 3f       	cpi	r21, 0xF9	; 249
 3b4:	50 f4       	brcc	.+20     	; 0x3ca <__addsf3x+0x4e>
 3b6:	50 3e       	cpi	r21, 0xE0	; 224
 3b8:	68 f1       	brcs	.+90     	; 0x414 <__addsf3x+0x98>
 3ba:	1a 16       	cp	r1, r26
 3bc:	f0 40       	sbci	r31, 0x00	; 0
 3be:	a2 2f       	mov	r26, r18
 3c0:	23 2f       	mov	r18, r19
 3c2:	34 2f       	mov	r19, r20
 3c4:	44 27       	eor	r20, r20
 3c6:	58 5f       	subi	r21, 0xF8	; 248
 3c8:	f3 cf       	rjmp	.-26     	; 0x3b0 <__addsf3x+0x34>
 3ca:	46 95       	lsr	r20
 3cc:	37 95       	ror	r19
 3ce:	27 95       	ror	r18
 3d0:	a7 95       	ror	r26
 3d2:	f0 40       	sbci	r31, 0x00	; 0
 3d4:	53 95       	inc	r21
 3d6:	c9 f7       	brne	.-14     	; 0x3ca <__addsf3x+0x4e>
 3d8:	7e f4       	brtc	.+30     	; 0x3f8 <__addsf3x+0x7c>
 3da:	1f 16       	cp	r1, r31
 3dc:	ba 0b       	sbc	r27, r26
 3de:	62 0b       	sbc	r22, r18
 3e0:	73 0b       	sbc	r23, r19
 3e2:	84 0b       	sbc	r24, r20
 3e4:	ba f0       	brmi	.+46     	; 0x414 <__addsf3x+0x98>
 3e6:	91 50       	subi	r25, 0x01	; 1
 3e8:	a1 f0       	breq	.+40     	; 0x412 <__addsf3x+0x96>
 3ea:	ff 0f       	add	r31, r31
 3ec:	bb 1f       	adc	r27, r27
 3ee:	66 1f       	adc	r22, r22
 3f0:	77 1f       	adc	r23, r23
 3f2:	88 1f       	adc	r24, r24
 3f4:	c2 f7       	brpl	.-16     	; 0x3e6 <__addsf3x+0x6a>
 3f6:	0e c0       	rjmp	.+28     	; 0x414 <__addsf3x+0x98>
 3f8:	ba 0f       	add	r27, r26
 3fa:	62 1f       	adc	r22, r18
 3fc:	73 1f       	adc	r23, r19
 3fe:	84 1f       	adc	r24, r20
 400:	48 f4       	brcc	.+18     	; 0x414 <__addsf3x+0x98>
 402:	87 95       	ror	r24
 404:	77 95       	ror	r23
 406:	67 95       	ror	r22
 408:	b7 95       	ror	r27
 40a:	f7 95       	ror	r31
 40c:	9e 3f       	cpi	r25, 0xFE	; 254
 40e:	08 f0       	brcs	.+2      	; 0x412 <__addsf3x+0x96>
 410:	b3 cf       	rjmp	.-154    	; 0x378 <__addsf3+0x1e>
 412:	93 95       	inc	r25
 414:	88 0f       	add	r24, r24
 416:	08 f0       	brcs	.+2      	; 0x41a <__addsf3x+0x9e>
 418:	99 27       	eor	r25, r25
 41a:	ee 0f       	add	r30, r30
 41c:	97 95       	ror	r25
 41e:	87 95       	ror	r24
 420:	08 95       	ret
 422:	60 d1       	rcall	.+704    	; 0x6e4 <__fp_pscA>
 424:	58 f0       	brcs	.+22     	; 0x43c <__addsf3x+0xc0>
 426:	80 e8       	ldi	r24, 0x80	; 128
 428:	91 e0       	ldi	r25, 0x01	; 1
 42a:	09 f4       	brne	.+2      	; 0x42e <__addsf3x+0xb2>
 42c:	9e ef       	ldi	r25, 0xFE	; 254
 42e:	61 d1       	rcall	.+706    	; 0x6f2 <__fp_pscB>
 430:	28 f0       	brcs	.+10     	; 0x43c <__addsf3x+0xc0>
 432:	40 e8       	ldi	r20, 0x80	; 128
 434:	51 e0       	ldi	r21, 0x01	; 1
 436:	59 f4       	brne	.+22     	; 0x44e <atan2+0xe>
 438:	5e ef       	ldi	r21, 0xFE	; 254
 43a:	09 c0       	rjmp	.+18     	; 0x44e <atan2+0xe>
 43c:	2b c1       	rjmp	.+598    	; 0x694 <__fp_nan>
 43e:	93 c1       	rjmp	.+806    	; 0x766 <__fp_zero>

00000440 <atan2>:
 440:	e9 2f       	mov	r30, r25
 442:	e0 78       	andi	r30, 0x80	; 128
 444:	6e d1       	rcall	.+732    	; 0x722 <__fp_split3>
 446:	68 f3       	brcs	.-38     	; 0x422 <__addsf3x+0xa6>
 448:	09 2e       	mov	r0, r25
 44a:	05 2a       	or	r0, r21
 44c:	c1 f3       	breq	.-16     	; 0x43e <__addsf3x+0xc2>
 44e:	26 17       	cp	r18, r22
 450:	37 07       	cpc	r19, r23
 452:	48 07       	cpc	r20, r24
 454:	59 07       	cpc	r21, r25
 456:	38 f0       	brcs	.+14     	; 0x466 <atan2+0x26>
 458:	0e 2e       	mov	r0, r30
 45a:	07 f8       	bld	r0, 7
 45c:	e0 25       	eor	r30, r0
 45e:	69 f0       	breq	.+26     	; 0x47a <atan2+0x3a>
 460:	e0 25       	eor	r30, r0
 462:	e0 64       	ori	r30, 0x40	; 64
 464:	0a c0       	rjmp	.+20     	; 0x47a <atan2+0x3a>
 466:	ef 63       	ori	r30, 0x3F	; 63
 468:	07 f8       	bld	r0, 7
 46a:	00 94       	com	r0
 46c:	07 fa       	bst	r0, 7
 46e:	db 01       	movw	r26, r22
 470:	b9 01       	movw	r22, r18
 472:	9d 01       	movw	r18, r26
 474:	dc 01       	movw	r26, r24
 476:	ca 01       	movw	r24, r20
 478:	ad 01       	movw	r20, r26
 47a:	ef 93       	push	r30
 47c:	43 d0       	rcall	.+134    	; 0x504 <__divsf3_pse>
 47e:	40 d1       	rcall	.+640    	; 0x700 <__fp_round>
 480:	0a d0       	rcall	.+20     	; 0x496 <atan>
 482:	5f 91       	pop	r21
 484:	55 23       	and	r21, r21
 486:	31 f0       	breq	.+12     	; 0x494 <atan2+0x54>
 488:	2b ed       	ldi	r18, 0xDB	; 219
 48a:	3f e0       	ldi	r19, 0x0F	; 15
 48c:	49 e4       	ldi	r20, 0x49	; 73
 48e:	50 fd       	sbrc	r21, 0
 490:	49 ec       	ldi	r20, 0xC9	; 201
 492:	63 cf       	rjmp	.-314    	; 0x35a <__addsf3>
 494:	08 95       	ret

00000496 <atan>:
 496:	df 93       	push	r29
 498:	dd 27       	eor	r29, r29
 49a:	b9 2f       	mov	r27, r25
 49c:	bf 77       	andi	r27, 0x7F	; 127
 49e:	40 e8       	ldi	r20, 0x80	; 128
 4a0:	5f e3       	ldi	r21, 0x3F	; 63
 4a2:	16 16       	cp	r1, r22
 4a4:	17 06       	cpc	r1, r23
 4a6:	48 07       	cpc	r20, r24
 4a8:	5b 07       	cpc	r21, r27
 4aa:	10 f4       	brcc	.+4      	; 0x4b0 <atan+0x1a>
 4ac:	d9 2f       	mov	r29, r25
 4ae:	62 d1       	rcall	.+708    	; 0x774 <inverse>
 4b0:	9f 93       	push	r25
 4b2:	8f 93       	push	r24
 4b4:	7f 93       	push	r23
 4b6:	6f 93       	push	r22
 4b8:	c7 d1       	rcall	.+910    	; 0x848 <square>
 4ba:	e8 e6       	ldi	r30, 0x68	; 104
 4bc:	f0 e0       	ldi	r31, 0x00	; 0
 4be:	ed d0       	rcall	.+474    	; 0x69a <__fp_powser>
 4c0:	1f d1       	rcall	.+574    	; 0x700 <__fp_round>
 4c2:	2f 91       	pop	r18
 4c4:	3f 91       	pop	r19
 4c6:	4f 91       	pop	r20
 4c8:	5f 91       	pop	r21
 4ca:	67 d1       	rcall	.+718    	; 0x79a <__mulsf3x>
 4cc:	dd 23       	and	r29, r29
 4ce:	49 f0       	breq	.+18     	; 0x4e2 <atan+0x4c>
 4d0:	90 58       	subi	r25, 0x80	; 128
 4d2:	a2 ea       	ldi	r26, 0xA2	; 162
 4d4:	2a ed       	ldi	r18, 0xDA	; 218
 4d6:	3f e0       	ldi	r19, 0x0F	; 15
 4d8:	49 ec       	ldi	r20, 0xC9	; 201
 4da:	5f e3       	ldi	r21, 0x3F	; 63
 4dc:	d0 78       	andi	r29, 0x80	; 128
 4de:	5d 27       	eor	r21, r29
 4e0:	4d df       	rcall	.-358    	; 0x37c <__addsf3x>
 4e2:	df 91       	pop	r29
 4e4:	0d c1       	rjmp	.+538    	; 0x700 <__fp_round>

000004e6 <__divsf3>:
 4e6:	0c d0       	rcall	.+24     	; 0x500 <__divsf3x>
 4e8:	0b c1       	rjmp	.+534    	; 0x700 <__fp_round>
 4ea:	03 d1       	rcall	.+518    	; 0x6f2 <__fp_pscB>
 4ec:	40 f0       	brcs	.+16     	; 0x4fe <__divsf3+0x18>
 4ee:	fa d0       	rcall	.+500    	; 0x6e4 <__fp_pscA>
 4f0:	30 f0       	brcs	.+12     	; 0x4fe <__divsf3+0x18>
 4f2:	21 f4       	brne	.+8      	; 0x4fc <__divsf3+0x16>
 4f4:	5f 3f       	cpi	r21, 0xFF	; 255
 4f6:	19 f0       	breq	.+6      	; 0x4fe <__divsf3+0x18>
 4f8:	c7 c0       	rjmp	.+398    	; 0x688 <__fp_inf>
 4fa:	51 11       	cpse	r21, r1
 4fc:	35 c1       	rjmp	.+618    	; 0x768 <__fp_szero>
 4fe:	ca c0       	rjmp	.+404    	; 0x694 <__fp_nan>

00000500 <__divsf3x>:
 500:	10 d1       	rcall	.+544    	; 0x722 <__fp_split3>
 502:	98 f3       	brcs	.-26     	; 0x4ea <__divsf3+0x4>

00000504 <__divsf3_pse>:
 504:	99 23       	and	r25, r25
 506:	c9 f3       	breq	.-14     	; 0x4fa <__divsf3+0x14>
 508:	55 23       	and	r21, r21
 50a:	b1 f3       	breq	.-20     	; 0x4f8 <__divsf3+0x12>
 50c:	95 1b       	sub	r25, r21
 50e:	55 0b       	sbc	r21, r21
 510:	bb 27       	eor	r27, r27
 512:	aa 27       	eor	r26, r26
 514:	62 17       	cp	r22, r18
 516:	73 07       	cpc	r23, r19
 518:	84 07       	cpc	r24, r20
 51a:	38 f0       	brcs	.+14     	; 0x52a <__divsf3_pse+0x26>
 51c:	9f 5f       	subi	r25, 0xFF	; 255
 51e:	5f 4f       	sbci	r21, 0xFF	; 255
 520:	22 0f       	add	r18, r18
 522:	33 1f       	adc	r19, r19
 524:	44 1f       	adc	r20, r20
 526:	aa 1f       	adc	r26, r26
 528:	a9 f3       	breq	.-22     	; 0x514 <__divsf3_pse+0x10>
 52a:	33 d0       	rcall	.+102    	; 0x592 <__divsf3_pse+0x8e>
 52c:	0e 2e       	mov	r0, r30
 52e:	3a f0       	brmi	.+14     	; 0x53e <__divsf3_pse+0x3a>
 530:	e0 e8       	ldi	r30, 0x80	; 128
 532:	30 d0       	rcall	.+96     	; 0x594 <__divsf3_pse+0x90>
 534:	91 50       	subi	r25, 0x01	; 1
 536:	50 40       	sbci	r21, 0x00	; 0
 538:	e6 95       	lsr	r30
 53a:	00 1c       	adc	r0, r0
 53c:	ca f7       	brpl	.-14     	; 0x530 <__divsf3_pse+0x2c>
 53e:	29 d0       	rcall	.+82     	; 0x592 <__divsf3_pse+0x8e>
 540:	fe 2f       	mov	r31, r30
 542:	27 d0       	rcall	.+78     	; 0x592 <__divsf3_pse+0x8e>
 544:	66 0f       	add	r22, r22
 546:	77 1f       	adc	r23, r23
 548:	88 1f       	adc	r24, r24
 54a:	bb 1f       	adc	r27, r27
 54c:	26 17       	cp	r18, r22
 54e:	37 07       	cpc	r19, r23
 550:	48 07       	cpc	r20, r24
 552:	ab 07       	cpc	r26, r27
 554:	b0 e8       	ldi	r27, 0x80	; 128
 556:	09 f0       	breq	.+2      	; 0x55a <__divsf3_pse+0x56>
 558:	bb 0b       	sbc	r27, r27
 55a:	80 2d       	mov	r24, r0
 55c:	bf 01       	movw	r22, r30
 55e:	ff 27       	eor	r31, r31
 560:	93 58       	subi	r25, 0x83	; 131
 562:	5f 4f       	sbci	r21, 0xFF	; 255
 564:	2a f0       	brmi	.+10     	; 0x570 <__divsf3_pse+0x6c>
 566:	9e 3f       	cpi	r25, 0xFE	; 254
 568:	51 05       	cpc	r21, r1
 56a:	68 f0       	brcs	.+26     	; 0x586 <__divsf3_pse+0x82>
 56c:	8d c0       	rjmp	.+282    	; 0x688 <__fp_inf>
 56e:	fc c0       	rjmp	.+504    	; 0x768 <__fp_szero>
 570:	5f 3f       	cpi	r21, 0xFF	; 255
 572:	ec f3       	brlt	.-6      	; 0x56e <__divsf3_pse+0x6a>
 574:	98 3e       	cpi	r25, 0xE8	; 232
 576:	dc f3       	brlt	.-10     	; 0x56e <__divsf3_pse+0x6a>
 578:	86 95       	lsr	r24
 57a:	77 95       	ror	r23
 57c:	67 95       	ror	r22
 57e:	b7 95       	ror	r27
 580:	f7 95       	ror	r31
 582:	9f 5f       	subi	r25, 0xFF	; 255
 584:	c9 f7       	brne	.-14     	; 0x578 <__divsf3_pse+0x74>
 586:	88 0f       	add	r24, r24
 588:	91 1d       	adc	r25, r1
 58a:	96 95       	lsr	r25
 58c:	87 95       	ror	r24
 58e:	97 f9       	bld	r25, 7
 590:	08 95       	ret
 592:	e1 e0       	ldi	r30, 0x01	; 1
 594:	66 0f       	add	r22, r22
 596:	77 1f       	adc	r23, r23
 598:	88 1f       	adc	r24, r24
 59a:	bb 1f       	adc	r27, r27
 59c:	62 17       	cp	r22, r18
 59e:	73 07       	cpc	r23, r19
 5a0:	84 07       	cpc	r24, r20
 5a2:	ba 07       	cpc	r27, r26
 5a4:	20 f0       	brcs	.+8      	; 0x5ae <__divsf3_pse+0xaa>
 5a6:	62 1b       	sub	r22, r18
 5a8:	73 0b       	sbc	r23, r19
 5aa:	84 0b       	sbc	r24, r20
 5ac:	ba 0b       	sbc	r27, r26
 5ae:	ee 1f       	adc	r30, r30
 5b0:	88 f7       	brcc	.-30     	; 0x594 <__divsf3_pse+0x90>
 5b2:	e0 95       	com	r30
 5b4:	08 95       	ret

000005b6 <__fixunssfsi>:
 5b6:	bd d0       	rcall	.+378    	; 0x732 <__fp_splitA>
 5b8:	88 f0       	brcs	.+34     	; 0x5dc <__fixunssfsi+0x26>
 5ba:	9f 57       	subi	r25, 0x7F	; 127
 5bc:	90 f0       	brcs	.+36     	; 0x5e2 <__fixunssfsi+0x2c>
 5be:	b9 2f       	mov	r27, r25
 5c0:	99 27       	eor	r25, r25
 5c2:	b7 51       	subi	r27, 0x17	; 23
 5c4:	a0 f0       	brcs	.+40     	; 0x5ee <__fixunssfsi+0x38>
 5c6:	d1 f0       	breq	.+52     	; 0x5fc <__fixunssfsi+0x46>
 5c8:	66 0f       	add	r22, r22
 5ca:	77 1f       	adc	r23, r23
 5cc:	88 1f       	adc	r24, r24
 5ce:	99 1f       	adc	r25, r25
 5d0:	1a f0       	brmi	.+6      	; 0x5d8 <__fixunssfsi+0x22>
 5d2:	ba 95       	dec	r27
 5d4:	c9 f7       	brne	.-14     	; 0x5c8 <__fixunssfsi+0x12>
 5d6:	12 c0       	rjmp	.+36     	; 0x5fc <__fixunssfsi+0x46>
 5d8:	b1 30       	cpi	r27, 0x01	; 1
 5da:	81 f0       	breq	.+32     	; 0x5fc <__fixunssfsi+0x46>
 5dc:	c4 d0       	rcall	.+392    	; 0x766 <__fp_zero>
 5de:	b1 e0       	ldi	r27, 0x01	; 1
 5e0:	08 95       	ret
 5e2:	c1 c0       	rjmp	.+386    	; 0x766 <__fp_zero>
 5e4:	67 2f       	mov	r22, r23
 5e6:	78 2f       	mov	r23, r24
 5e8:	88 27       	eor	r24, r24
 5ea:	b8 5f       	subi	r27, 0xF8	; 248
 5ec:	39 f0       	breq	.+14     	; 0x5fc <__fixunssfsi+0x46>
 5ee:	b9 3f       	cpi	r27, 0xF9	; 249
 5f0:	cc f3       	brlt	.-14     	; 0x5e4 <__fixunssfsi+0x2e>
 5f2:	86 95       	lsr	r24
 5f4:	77 95       	ror	r23
 5f6:	67 95       	ror	r22
 5f8:	b3 95       	inc	r27
 5fa:	d9 f7       	brne	.-10     	; 0x5f2 <__fixunssfsi+0x3c>
 5fc:	3e f4       	brtc	.+14     	; 0x60c <__fixunssfsi+0x56>
 5fe:	90 95       	com	r25
 600:	80 95       	com	r24
 602:	70 95       	com	r23
 604:	61 95       	neg	r22
 606:	7f 4f       	sbci	r23, 0xFF	; 255
 608:	8f 4f       	sbci	r24, 0xFF	; 255
 60a:	9f 4f       	sbci	r25, 0xFF	; 255
 60c:	08 95       	ret

0000060e <__floatunsisf>:
 60e:	e8 94       	clt
 610:	09 c0       	rjmp	.+18     	; 0x624 <__floatsisf+0x12>

00000612 <__floatsisf>:
 612:	97 fb       	bst	r25, 7
 614:	3e f4       	brtc	.+14     	; 0x624 <__floatsisf+0x12>
 616:	90 95       	com	r25
 618:	80 95       	com	r24
 61a:	70 95       	com	r23
 61c:	61 95       	neg	r22
 61e:	7f 4f       	sbci	r23, 0xFF	; 255
 620:	8f 4f       	sbci	r24, 0xFF	; 255
 622:	9f 4f       	sbci	r25, 0xFF	; 255
 624:	99 23       	and	r25, r25
 626:	a9 f0       	breq	.+42     	; 0x652 <__floatsisf+0x40>
 628:	f9 2f       	mov	r31, r25
 62a:	96 e9       	ldi	r25, 0x96	; 150
 62c:	bb 27       	eor	r27, r27
 62e:	93 95       	inc	r25
 630:	f6 95       	lsr	r31
 632:	87 95       	ror	r24
 634:	77 95       	ror	r23
 636:	67 95       	ror	r22
 638:	b7 95       	ror	r27
 63a:	f1 11       	cpse	r31, r1
 63c:	f8 cf       	rjmp	.-16     	; 0x62e <__floatsisf+0x1c>
 63e:	fa f4       	brpl	.+62     	; 0x67e <__floatsisf+0x6c>
 640:	bb 0f       	add	r27, r27
 642:	11 f4       	brne	.+4      	; 0x648 <__floatsisf+0x36>
 644:	60 ff       	sbrs	r22, 0
 646:	1b c0       	rjmp	.+54     	; 0x67e <__floatsisf+0x6c>
 648:	6f 5f       	subi	r22, 0xFF	; 255
 64a:	7f 4f       	sbci	r23, 0xFF	; 255
 64c:	8f 4f       	sbci	r24, 0xFF	; 255
 64e:	9f 4f       	sbci	r25, 0xFF	; 255
 650:	16 c0       	rjmp	.+44     	; 0x67e <__floatsisf+0x6c>
 652:	88 23       	and	r24, r24
 654:	11 f0       	breq	.+4      	; 0x65a <__floatsisf+0x48>
 656:	96 e9       	ldi	r25, 0x96	; 150
 658:	11 c0       	rjmp	.+34     	; 0x67c <__floatsisf+0x6a>
 65a:	77 23       	and	r23, r23
 65c:	21 f0       	breq	.+8      	; 0x666 <__floatsisf+0x54>
 65e:	9e e8       	ldi	r25, 0x8E	; 142
 660:	87 2f       	mov	r24, r23
 662:	76 2f       	mov	r23, r22
 664:	05 c0       	rjmp	.+10     	; 0x670 <__floatsisf+0x5e>
 666:	66 23       	and	r22, r22
 668:	71 f0       	breq	.+28     	; 0x686 <__floatsisf+0x74>
 66a:	96 e8       	ldi	r25, 0x86	; 134
 66c:	86 2f       	mov	r24, r22
 66e:	70 e0       	ldi	r23, 0x00	; 0
 670:	60 e0       	ldi	r22, 0x00	; 0
 672:	2a f0       	brmi	.+10     	; 0x67e <__floatsisf+0x6c>
 674:	9a 95       	dec	r25
 676:	66 0f       	add	r22, r22
 678:	77 1f       	adc	r23, r23
 67a:	88 1f       	adc	r24, r24
 67c:	da f7       	brpl	.-10     	; 0x674 <__floatsisf+0x62>
 67e:	88 0f       	add	r24, r24
 680:	96 95       	lsr	r25
 682:	87 95       	ror	r24
 684:	97 f9       	bld	r25, 7
 686:	08 95       	ret

00000688 <__fp_inf>:
 688:	97 f9       	bld	r25, 7
 68a:	9f 67       	ori	r25, 0x7F	; 127
 68c:	80 e8       	ldi	r24, 0x80	; 128
 68e:	70 e0       	ldi	r23, 0x00	; 0
 690:	60 e0       	ldi	r22, 0x00	; 0
 692:	08 95       	ret

00000694 <__fp_nan>:
 694:	9f ef       	ldi	r25, 0xFF	; 255
 696:	80 ec       	ldi	r24, 0xC0	; 192
 698:	08 95       	ret

0000069a <__fp_powser>:
 69a:	df 93       	push	r29
 69c:	cf 93       	push	r28
 69e:	1f 93       	push	r17
 6a0:	0f 93       	push	r16
 6a2:	ff 92       	push	r15
 6a4:	ef 92       	push	r14
 6a6:	df 92       	push	r13
 6a8:	7b 01       	movw	r14, r22
 6aa:	8c 01       	movw	r16, r24
 6ac:	68 94       	set
 6ae:	05 c0       	rjmp	.+10     	; 0x6ba <__fp_powser+0x20>
 6b0:	da 2e       	mov	r13, r26
 6b2:	ef 01       	movw	r28, r30
 6b4:	72 d0       	rcall	.+228    	; 0x79a <__mulsf3x>
 6b6:	fe 01       	movw	r30, r28
 6b8:	e8 94       	clt
 6ba:	a5 91       	lpm	r26, Z+
 6bc:	25 91       	lpm	r18, Z+
 6be:	35 91       	lpm	r19, Z+
 6c0:	45 91       	lpm	r20, Z+
 6c2:	55 91       	lpm	r21, Z+
 6c4:	ae f3       	brts	.-22     	; 0x6b0 <__fp_powser+0x16>
 6c6:	ef 01       	movw	r28, r30
 6c8:	59 de       	rcall	.-846    	; 0x37c <__addsf3x>
 6ca:	fe 01       	movw	r30, r28
 6cc:	97 01       	movw	r18, r14
 6ce:	a8 01       	movw	r20, r16
 6d0:	da 94       	dec	r13
 6d2:	79 f7       	brne	.-34     	; 0x6b2 <__fp_powser+0x18>
 6d4:	df 90       	pop	r13
 6d6:	ef 90       	pop	r14
 6d8:	ff 90       	pop	r15
 6da:	0f 91       	pop	r16
 6dc:	1f 91       	pop	r17
 6de:	cf 91       	pop	r28
 6e0:	df 91       	pop	r29
 6e2:	08 95       	ret

000006e4 <__fp_pscA>:
 6e4:	00 24       	eor	r0, r0
 6e6:	0a 94       	dec	r0
 6e8:	16 16       	cp	r1, r22
 6ea:	17 06       	cpc	r1, r23
 6ec:	18 06       	cpc	r1, r24
 6ee:	09 06       	cpc	r0, r25
 6f0:	08 95       	ret

000006f2 <__fp_pscB>:
 6f2:	00 24       	eor	r0, r0
 6f4:	0a 94       	dec	r0
 6f6:	12 16       	cp	r1, r18
 6f8:	13 06       	cpc	r1, r19
 6fa:	14 06       	cpc	r1, r20
 6fc:	05 06       	cpc	r0, r21
 6fe:	08 95       	ret

00000700 <__fp_round>:
 700:	09 2e       	mov	r0, r25
 702:	03 94       	inc	r0
 704:	00 0c       	add	r0, r0
 706:	11 f4       	brne	.+4      	; 0x70c <__fp_round+0xc>
 708:	88 23       	and	r24, r24
 70a:	52 f0       	brmi	.+20     	; 0x720 <__fp_round+0x20>
 70c:	bb 0f       	add	r27, r27
 70e:	40 f4       	brcc	.+16     	; 0x720 <__fp_round+0x20>
 710:	bf 2b       	or	r27, r31
 712:	11 f4       	brne	.+4      	; 0x718 <__fp_round+0x18>
 714:	60 ff       	sbrs	r22, 0
 716:	04 c0       	rjmp	.+8      	; 0x720 <__fp_round+0x20>
 718:	6f 5f       	subi	r22, 0xFF	; 255
 71a:	7f 4f       	sbci	r23, 0xFF	; 255
 71c:	8f 4f       	sbci	r24, 0xFF	; 255
 71e:	9f 4f       	sbci	r25, 0xFF	; 255
 720:	08 95       	ret

00000722 <__fp_split3>:
 722:	57 fd       	sbrc	r21, 7
 724:	90 58       	subi	r25, 0x80	; 128
 726:	44 0f       	add	r20, r20
 728:	55 1f       	adc	r21, r21
 72a:	59 f0       	breq	.+22     	; 0x742 <__fp_splitA+0x10>
 72c:	5f 3f       	cpi	r21, 0xFF	; 255
 72e:	71 f0       	breq	.+28     	; 0x74c <__fp_splitA+0x1a>
 730:	47 95       	ror	r20

00000732 <__fp_splitA>:
 732:	88 0f       	add	r24, r24
 734:	97 fb       	bst	r25, 7
 736:	99 1f       	adc	r25, r25
 738:	61 f0       	breq	.+24     	; 0x752 <__fp_splitA+0x20>
 73a:	9f 3f       	cpi	r25, 0xFF	; 255
 73c:	79 f0       	breq	.+30     	; 0x75c <__fp_splitA+0x2a>
 73e:	87 95       	ror	r24
 740:	08 95       	ret
 742:	12 16       	cp	r1, r18
 744:	13 06       	cpc	r1, r19
 746:	14 06       	cpc	r1, r20
 748:	55 1f       	adc	r21, r21
 74a:	f2 cf       	rjmp	.-28     	; 0x730 <__fp_split3+0xe>
 74c:	46 95       	lsr	r20
 74e:	f1 df       	rcall	.-30     	; 0x732 <__fp_splitA>
 750:	08 c0       	rjmp	.+16     	; 0x762 <__fp_splitA+0x30>
 752:	16 16       	cp	r1, r22
 754:	17 06       	cpc	r1, r23
 756:	18 06       	cpc	r1, r24
 758:	99 1f       	adc	r25, r25
 75a:	f1 cf       	rjmp	.-30     	; 0x73e <__fp_splitA+0xc>
 75c:	86 95       	lsr	r24
 75e:	71 05       	cpc	r23, r1
 760:	61 05       	cpc	r22, r1
 762:	08 94       	sec
 764:	08 95       	ret

00000766 <__fp_zero>:
 766:	e8 94       	clt

00000768 <__fp_szero>:
 768:	bb 27       	eor	r27, r27
 76a:	66 27       	eor	r22, r22
 76c:	77 27       	eor	r23, r23
 76e:	cb 01       	movw	r24, r22
 770:	97 f9       	bld	r25, 7
 772:	08 95       	ret

00000774 <inverse>:
 774:	9b 01       	movw	r18, r22
 776:	ac 01       	movw	r20, r24
 778:	60 e0       	ldi	r22, 0x00	; 0
 77a:	70 e0       	ldi	r23, 0x00	; 0
 77c:	80 e8       	ldi	r24, 0x80	; 128
 77e:	9f e3       	ldi	r25, 0x3F	; 63
 780:	b2 ce       	rjmp	.-668    	; 0x4e6 <__divsf3>

00000782 <__mulsf3>:
 782:	0b d0       	rcall	.+22     	; 0x79a <__mulsf3x>
 784:	bd cf       	rjmp	.-134    	; 0x700 <__fp_round>
 786:	ae df       	rcall	.-164    	; 0x6e4 <__fp_pscA>
 788:	28 f0       	brcs	.+10     	; 0x794 <__mulsf3+0x12>
 78a:	b3 df       	rcall	.-154    	; 0x6f2 <__fp_pscB>
 78c:	18 f0       	brcs	.+6      	; 0x794 <__mulsf3+0x12>
 78e:	95 23       	and	r25, r21
 790:	09 f0       	breq	.+2      	; 0x794 <__mulsf3+0x12>
 792:	7a cf       	rjmp	.-268    	; 0x688 <__fp_inf>
 794:	7f cf       	rjmp	.-258    	; 0x694 <__fp_nan>
 796:	11 24       	eor	r1, r1
 798:	e7 cf       	rjmp	.-50     	; 0x768 <__fp_szero>

0000079a <__mulsf3x>:
 79a:	c3 df       	rcall	.-122    	; 0x722 <__fp_split3>
 79c:	a0 f3       	brcs	.-24     	; 0x786 <__mulsf3+0x4>

0000079e <__mulsf3_pse>:
 79e:	95 9f       	mul	r25, r21
 7a0:	d1 f3       	breq	.-12     	; 0x796 <__mulsf3+0x14>
 7a2:	95 0f       	add	r25, r21
 7a4:	50 e0       	ldi	r21, 0x00	; 0
 7a6:	55 1f       	adc	r21, r21
 7a8:	62 9f       	mul	r22, r18
 7aa:	f0 01       	movw	r30, r0
 7ac:	72 9f       	mul	r23, r18
 7ae:	bb 27       	eor	r27, r27
 7b0:	f0 0d       	add	r31, r0
 7b2:	b1 1d       	adc	r27, r1
 7b4:	63 9f       	mul	r22, r19
 7b6:	aa 27       	eor	r26, r26
 7b8:	f0 0d       	add	r31, r0
 7ba:	b1 1d       	adc	r27, r1
 7bc:	aa 1f       	adc	r26, r26
 7be:	64 9f       	mul	r22, r20
 7c0:	66 27       	eor	r22, r22
 7c2:	b0 0d       	add	r27, r0
 7c4:	a1 1d       	adc	r26, r1
 7c6:	66 1f       	adc	r22, r22
 7c8:	82 9f       	mul	r24, r18
 7ca:	22 27       	eor	r18, r18
 7cc:	b0 0d       	add	r27, r0
 7ce:	a1 1d       	adc	r26, r1
 7d0:	62 1f       	adc	r22, r18
 7d2:	73 9f       	mul	r23, r19
 7d4:	b0 0d       	add	r27, r0
 7d6:	a1 1d       	adc	r26, r1
 7d8:	62 1f       	adc	r22, r18
 7da:	83 9f       	mul	r24, r19
 7dc:	a0 0d       	add	r26, r0
 7de:	61 1d       	adc	r22, r1
 7e0:	22 1f       	adc	r18, r18
 7e2:	74 9f       	mul	r23, r20
 7e4:	33 27       	eor	r19, r19
 7e6:	a0 0d       	add	r26, r0
 7e8:	61 1d       	adc	r22, r1
 7ea:	23 1f       	adc	r18, r19
 7ec:	84 9f       	mul	r24, r20
 7ee:	60 0d       	add	r22, r0
 7f0:	21 1d       	adc	r18, r1
 7f2:	82 2f       	mov	r24, r18
 7f4:	76 2f       	mov	r23, r22
 7f6:	6a 2f       	mov	r22, r26
 7f8:	11 24       	eor	r1, r1
 7fa:	9f 57       	subi	r25, 0x7F	; 127
 7fc:	50 40       	sbci	r21, 0x00	; 0
 7fe:	8a f0       	brmi	.+34     	; 0x822 <__mulsf3_pse+0x84>
 800:	e1 f0       	breq	.+56     	; 0x83a <__mulsf3_pse+0x9c>
 802:	88 23       	and	r24, r24
 804:	4a f0       	brmi	.+18     	; 0x818 <__mulsf3_pse+0x7a>
 806:	ee 0f       	add	r30, r30
 808:	ff 1f       	adc	r31, r31
 80a:	bb 1f       	adc	r27, r27
 80c:	66 1f       	adc	r22, r22
 80e:	77 1f       	adc	r23, r23
 810:	88 1f       	adc	r24, r24
 812:	91 50       	subi	r25, 0x01	; 1
 814:	50 40       	sbci	r21, 0x00	; 0
 816:	a9 f7       	brne	.-22     	; 0x802 <__mulsf3_pse+0x64>
 818:	9e 3f       	cpi	r25, 0xFE	; 254
 81a:	51 05       	cpc	r21, r1
 81c:	70 f0       	brcs	.+28     	; 0x83a <__mulsf3_pse+0x9c>
 81e:	34 cf       	rjmp	.-408    	; 0x688 <__fp_inf>
 820:	a3 cf       	rjmp	.-186    	; 0x768 <__fp_szero>
 822:	5f 3f       	cpi	r21, 0xFF	; 255
 824:	ec f3       	brlt	.-6      	; 0x820 <__mulsf3_pse+0x82>
 826:	98 3e       	cpi	r25, 0xE8	; 232
 828:	dc f3       	brlt	.-10     	; 0x820 <__mulsf3_pse+0x82>
 82a:	86 95       	lsr	r24
 82c:	77 95       	ror	r23
 82e:	67 95       	ror	r22
 830:	b7 95       	ror	r27
 832:	f7 95       	ror	r31
 834:	e7 95       	ror	r30
 836:	9f 5f       	subi	r25, 0xFF	; 255
 838:	c1 f7       	brne	.-16     	; 0x82a <__mulsf3_pse+0x8c>
 83a:	fe 2b       	or	r31, r30
 83c:	88 0f       	add	r24, r24
 83e:	91 1d       	adc	r25, r1
 840:	96 95       	lsr	r25
 842:	87 95       	ror	r24
 844:	97 f9       	bld	r25, 7
 846:	08 95       	ret

00000848 <square>:
 848:	9b 01       	movw	r18, r22
 84a:	ac 01       	movw	r20, r24
 84c:	9a cf       	rjmp	.-204    	; 0x782 <__mulsf3>

0000084e <_exit>:
 84e:	f8 94       	cli

00000850 <__stop_program>:
 850:	ff cf       	rjmp	.-2      	; 0x850 <__stop_program>
